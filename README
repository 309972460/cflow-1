* Introduction

This stuff was initially written in 1997, when I needed a utility
that could display the control flow in a C program. The latest updates
date back to 1999. Then, as I no longer needed the package, it fell into
oblivion.

A recent thread in gnu-devel mailing list has shown that there is a
kind of demand for that sort of utility, so I decided to resurrect
it and make a full-fledged package of it. See TODO for the details.

* Current Status

The package compiles and runs on GNU/Linux systems. It supports all
command line switches required by POSIX, plus a number of extended
ones. It is able to produce output two formats: default output format
(which I call GNU cflow format and which is the default) and in POSIX
format.

Emacs module cflow-mode.el works wit files in GNU cflow format (as
opposed to POSIX format). It has been tested with Emacs 21.3.

* Planned Status

The planned utility shall fully conform to POSIX specification of a
cflow utility. See doc/cflow.txt for the exact description.

The package shall have modular architecture: the `cflow' utility itself
shall invoke an external program (a back-end) to perform a lexical analisys
of input sources. This will allow to use `cflow' to analize source files
written in languages other than C.

The output format of the utility shall conform to the POSIX specification.
The program shall also be able to optionally pipe its output to an
external program (a front-end). This will allow for creating reports in
various formats (e.g. graph, html, etc.)

An Emacs interface shall be provided that will facilitate source file
navigation from Emacs.

* Copyright information:

Copyright (C) 2005, Sergey Poznyakoff 

   Permission is granted to anyone to make or distribute verbatim copies
   of this document as received, in any medium, provided that the
   copyright notice and this permission notice are preserved,
   thus giving the recipient permission to redistribute in turn.

   Permission is granted to distribute modified versions
   of this document, or of portions of it,
   under the above conditions, provided also that they
   carry prominent notices stating who last changed them.


Local variables:
mode: outline
paragraph-separate: "[ 	]*$"
end:
